# Ambiguity on how to handle files we've already seen.

 - Requirements state to only process 'new' files.
 - 'New' is defined as a name not yet observed.
 - However, requirements also state that in event of name collision take the latest.
 - Since we ignore files we've already seen, name collision will never occur.

Assumption: 
 - Don't worry about name collisions until requirements are changed.



# Ambiguity on how to proceed if file headers don't match headers defined in requirements.

Assumption:
 - If mismatch treat as error.



# No Non-Functional Requirements Provided

 - Requirements do not give details on minimum or maximum file size
 - Requirements do not specify performance objectives
 - Requirements do not specify production environment specifications/constraints
 - Requirements do not specify limits for number of files.

 Assumptions:
 - Files can be empty, contain just the header, or contain an extremely large amount of rows.
 - Performance should be reasonable, but varies on hardware resources. Multithreading perofmance not required at this time.
 - No timeout per file is required at this time.
 - No file size limit required, not implementing file size restrictions at this time.
 - No limit for max possible number of files, not implementing file count restrictions at this time.



 # Ambiguity on how to handle partially processed files

 - Requirements state to delete processed files
 - Requirements allow for processing to complete with errors

 Assumption:
 - Do not delete partially processed files.



 # Requirements do not specify that we need to handle reprocessing failed or partially processed files

 Assumption:
 - Do not need to handle reprocessing failed or partially processed files at this time.



 # Requirements do not specify how to handle process termination, whether requested or forced.

 Assumption:
 - Process does not need ACID properties at this time.
 - Process does not need to implement requested termination event at this time.